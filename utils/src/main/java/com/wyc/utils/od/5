import java.util.Scanner;

import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        ArrayList<String> arr = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            arr.add(in.next());
        }
        String target = in.next();
        int k = in.nextInt();

        Collections.sort(arr);
        HashMap<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < target.length(); i++) {
            char ch = target.charAt(i);
            if (map.get(ch) == null) {
                map.put(ch, 1);
            } else {
                map.put(ch, map.get(ch) + 1);
            }
        }

        int cnt = 0;
        String res = null;
        int broCnt = 0;

        for (int i = 0; i < arr.size(); i++) {
            String cur = arr.get(i);
            if (cur.equals(target)) {
                continue;
            }
            boolean flag = true;
            if (cur.length() == target.length()) {
                HashMap<Character, Integer> map2 = new HashMap<>();
                parse(cur, map2);
                if(pass(cur, map, map2)) broCnt++;
                else flag = false;
            } else {
                flag = false;
            }

            if (flag) {
                cnt++;
                if (cnt == k) {
                    res = cur;
                }
            }
        }
        System.out.println(broCnt);
        if (res != null) System.out.println(res);
    }

    static void parse(String target, HashMap<Character, Integer> map) {
        for (int i = 0; i < target.length(); i++) {
            char ch = target.charAt(i);
            if (map.get(ch) == null) {
                map.put(ch, 1);
            } else {
                map.put(ch, map.get(ch) + 1);
            }
        }
    }

    static boolean pass(String target, HashMap<Character, Integer> map1,
    HashMap<Character, Integer> map2) {
        for(int i = 0; i < target.length(); i++) {
            char ch = target.charAt(i);
            if(map1.get(ch) != map2.get(ch)) {
                return false;
            }
        }
        return true;
    }
}